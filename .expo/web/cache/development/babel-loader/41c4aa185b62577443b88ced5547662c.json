{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Bootcamp\\\\react native\\\\finalProject\\\\src\\\\Pages\\\\HomeScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { API } from \"../Config/Api\";\n\nfunction HomeScreen() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  useEffect(function () {\n    book();\n  }, []);\n\n  var book = function book() {\n    var _books;\n\n    return _regeneratorRuntime.async(function book$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.get(\"/books\"));\n\n          case 3:\n            _books = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(setBooks(_books.data.data.books));\n\n          case 6:\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, books.map(function (book) {\n    return React.createElement(ListItem, {\n      style: styles.listItem,\n      onPress: function onPress() {\n        navigation.navigate(\"Detail\", {\n          itemId: 86,\n          itemName: \"Produk Lapan Enam\"\n        });\n      },\n      bottomDivider: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: require('../Images/CoverBook/' + book.coverFile),\n      style: styles.coverBook,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, React.createElement(ListItem.Title, {\n      h6: true,\n      numberOfLines: 2,\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, book.title), React.createElement(ListItem.Subtitle, {\n      numberOfLines: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, book.author), React.createElement(ListItem.Title, {\n      numberOfLines: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, book.about)), React.createElement(ListItem.Chevron, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }));\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#E5E5E5\",\n    alignItems: \"center\",\n    padding: 10\n  },\n  title: {\n    fontWeight: 500\n  },\n  listItem: {\n    width: \"95%\"\n  },\n  coverBook: {\n    width: 100,\n    height: 150\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["D:/Bootcamp/react native/finalProject/src/Pages/HomeScreen.js"],"names":["React","useState","useEffect","ListItem","Avatar","API","HomeScreen","books","setBooks","book","get","data","console","log","styles","container","map","listItem","navigation","navigate","itemId","itemName","require","coverFile","coverBook","title","author","about","StyleSheet","create","width","height","backgroundColor","alignItems","padding","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Image, View } from 'react-native';\r\nimport { ListItem, Avatar } from 'react-native-elements';\r\nimport { API } from '../Config/Api';\r\n\r\nfunction HomeScreen() {\r\n    const [books, setBooks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        book();\r\n    }, []);\r\n\r\n    const book = async () => {\r\n        try {\r\n          const books = await API.get(\"/books\");\r\n          await setBooks(books.data.data.books);\r\n        } catch (error) {\r\n          console.log(error);\r\n        } \r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            {books.map((book) => (\r\n            <ListItem style={styles.listItem} \r\n                onPress={() => {\r\n                    navigation.navigate(\"Detail\", {\r\n                        itemId: 86,\r\n                        itemName: \"Produk Lapan Enam\",\r\n                    });\r\n                }} \r\n            bottomDivider>\r\n                <Image source={require('../Images/CoverBook/'+book.coverFile)} style={styles.coverBook} />\r\n                <ListItem.Content>\r\n                    <ListItem.Title h6 numberOfLines={2} style={styles.title}>{book.title}</ListItem.Title>\r\n                    <ListItem.Subtitle numberOfLines={1}>{book.author}</ListItem.Subtitle>\r\n                    <ListItem.Title numberOfLines={4}>{book.about}</ListItem.Title>\r\n                </ListItem.Content>\r\n                <ListItem.Chevron />\r\n            </ListItem>\r\n            ))}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: \"#E5E5E5\",\r\n        alignItems: \"center\",\r\n        // justifyContent: \"center\",\r\n        padding: 10,\r\n    },\r\n    title: {\r\n        fontWeight: 500\r\n    },\r\n    listItem: {\r\n        width: \"95%\",\r\n    },\r\n    coverBook: {\r\n        width: 100, \r\n        height: 150,\r\n\r\n    },\r\n});\r\n\r\nexport default HomeScreen\r\n"]},"metadata":{},"sourceType":"module"}