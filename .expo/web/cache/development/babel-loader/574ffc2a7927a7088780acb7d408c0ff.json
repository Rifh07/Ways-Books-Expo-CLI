{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Bootcamp\\\\react native\\\\finalProject\\\\node_modules\\\\react-native-gesture-handler\\\\dist\\\\src\\\\components\\\\GestureComponents.web.js\";\n\nimport * as React from 'react';\nimport RNDrawerLayoutAndroid from \"react-native-web/dist/exports/DrawerLayoutAndroid\";\nimport RNFlatList from \"react-native-web/dist/exports/FlatList\";\nimport RNSwitch from \"react-native-web/dist/exports/Switch\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport RNScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport createNativeWrapper from \"../handlers/createNativeWrapper\";\nexport var ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true\n});\nexport var Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nexport var TextInput = createNativeWrapper(RNTextInput);\nexport var DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true\n});\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\nexport var FlatList = React.forwardRef(function (props, ref) {\n  return React.createElement(RNFlatList, _extends({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(scrollProps) {\n      return React.createElement(ScrollView, _extends({}, scrollProps, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 132\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 59\n    }\n  }));\n});","map":{"version":3,"sources":["D:/Bootcamp/react native/finalProject/node_modules/react-native-gesture-handler/dist/src/components/GestureComponents.web.js"],"names":["React","createNativeWrapper","ScrollView","RNScrollView","disallowInterruption","Switch","RNSwitch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","RNTextInput","DrawerLayoutAndroid","RNDrawerLayoutAndroid","positions","FlatList","forwardRef","props","ref","scrollProps"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAEA,OAAOC,mBAAP;AACA,OAAO,IAAMC,UAAU,GAAGD,mBAAmB,CAACE,YAAD,EAAe;AACxDC,EAAAA,oBAAoB,EAAE;AADkC,CAAf,CAAtC;AAGP,OAAO,IAAMC,MAAM,GAAGJ,mBAAmB,CAACK,QAAD,EAAW;AAChDC,EAAAA,uBAAuB,EAAE,KADuB;AAEhDC,EAAAA,qBAAqB,EAAE,IAFyB;AAGhDJ,EAAAA,oBAAoB,EAAE;AAH0B,CAAX,CAAlC;AAKP,OAAO,IAAMK,SAAS,GAAGR,mBAAmB,CAACS,WAAD,CAArC;AACP,OAAO,IAAMC,mBAAmB,GAAGV,mBAAmB,CAACW,qBAAD,EAAwB;AAC1ER,EAAAA,oBAAoB,EAAE;AADoD,CAAxB,CAA/C;AAIPO,mBAAmB,CAACE,SAApB,GAAgCD,qBAAqB,CAACC,SAAtD;AACA,OAAO,IAAMC,QAAQ,GAAGd,KAAK,CAACe,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR;AAAA,SAAiB,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA;AAAjB,KAA0BD,KAA1B;AAAiC,IAAA,qBAAqB,EAAE,+BAACE,WAAD;AAAA,aAAiB,oBAAC,UAAD,eAAgBA,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB;AAAA,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;AAAA,CAAjB,CAAjB","sourcesContent":["import * as React from 'react';\nimport { DrawerLayoutAndroid as RNDrawerLayoutAndroid, FlatList as RNFlatList, Switch as RNSwitch, TextInput as RNTextInput, ScrollView as RNScrollView, } from 'react-native';\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n    disallowInterruption: true,\n});\nexport const Switch = createNativeWrapper(RNSwitch, {\n    shouldCancelWhenOutside: false,\n    shouldActivateOnStart: true,\n    disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n    disallowInterruption: true,\n});\n// @ts-ignore -- TODO(TS) to investigate if it's needed\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\nexport const FlatList = React.forwardRef((props, ref) => (<RNFlatList ref={ref} {...props} renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps}/>}/>));\n"]},"metadata":{},"sourceType":"module"}