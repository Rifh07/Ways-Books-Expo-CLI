{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Hammer from '@egjs/hammerjs';\nimport { State } from \"../State\";\nimport PressGestureHandler from \"./PressGestureHandler\";\nimport { isnan, isValidNumber } from \"./utils\";\n\nvar LongPressGestureHandler = function (_PressGestureHandler) {\n  _inherits(LongPressGestureHandler, _PressGestureHandler);\n\n  var _super = _createSuper(LongPressGestureHandler);\n\n  function LongPressGestureHandler() {\n    _classCallCheck(this, LongPressGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LongPressGestureHandler, [{\n    key: \"minDurationMs\",\n    get: function get() {\n      return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var maxDistSq = _ref.maxDistSq;\n      return !isValidNumber(maxDistSq);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(LongPressGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _Hammer$INPUT_START$H;\n\n      return (_Hammer$INPUT_START$H = {}, _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_START, State.ACTIVE), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_MOVE, State.ACTIVE), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_END, State.END), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_CANCEL, State.FAILED), _Hammer$INPUT_START$H)[type];\n    }\n  }]);\n\n  return LongPressGestureHandler;\n}(PressGestureHandler);\n\nexport default LongPressGestureHandler;","map":{"version":3,"sources":["D:/Bootcamp/react native/finalProject/node_modules/react-native-gesture-handler/dist/src/web/LongPressGestureHandler.js"],"names":["Hammer","State","PressGestureHandler","isnan","isValidNumber","LongPressGestureHandler","config","minDurationMs","maxDist","maxDistSq","hasCustomActivationCriteria","shouldCancelWhenOutside","time","type","INPUT_START","ACTIVE","INPUT_MOVE","INPUT_END","END","INPUT_CANCEL","FAILED"],"mappings":";;;;;;;;;;;;;;;;AAEA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,SAASC,KAAT;AACA,OAAOC,mBAAP;AACA,SAASC,KAAT,EAAgBC,aAAhB;;IACMC,uB;;;;;;;;;;;;;SACF,eAAoB;AAEhB,aAAOF,KAAK,CAAC,KAAKG,MAAL,CAAYC,aAAb,CAAL,GAAmC,GAAnC,GAAyC,KAAKD,MAAL,CAAYC,aAA5D;AACH;;;SACD,eAAc;AAEV,aAAOJ,KAAK,CAAC,KAAKG,MAAL,CAAYE,OAAb,CAAL,GAA6B,CAA7B,GAAiC,KAAKF,MAAL,CAAYE,OAApD;AACH;;;WACD,iDAAiD;AAAA,UAAbC,SAAa,QAAbA,SAAa;AAC7C,aAAO,CAACL,aAAa,CAACK,SAAD,CAArB;AACH;;;WACD,qBAAY;AACR,UAAI,CAAC,KAAKC,2BAAV,EAAuC;AAGnC,eAAO;AACHC,UAAAA,uBAAuB,EAAE,IADtB;AAEHF,UAAAA,SAAS,EAAE;AAFR,SAAP;AAIH;;AACD,aAAO,KAAKH,MAAZ;AACH;;;WACD,2BAAkB;AACd;AAGIM,QAAAA,IAAI,EAAE,KAAKL;AAHf;AAKH;;;WACD,kBAASM,IAAT,EAAe;AAAA;;AACX,aAAO,oEACFb,MAAM,CAACc,WADL,EACmBb,KAAK,CAACc,MADzB,0CAEFf,MAAM,CAACgB,UAFL,EAEkBf,KAAK,CAACc,MAFxB,0CAGFf,MAAM,CAACiB,SAHL,EAGiBhB,KAAK,CAACiB,GAHvB,0CAIFlB,MAAM,CAACmB,YAJL,EAIoBlB,KAAK,CAACmB,MAJ1B,0BAKLP,IALK,CAAP;AAMH;;;;EArCiCX,mB;;AAuCtC,eAAeG,uBAAf","sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\nimport { State } from '../State';\nimport PressGestureHandler from './PressGestureHandler';\nimport { isnan, isValidNumber } from './utils';\nclass LongPressGestureHandler extends PressGestureHandler {\n    get minDurationMs() {\n        // @ts-ignore FIXNE(TS)\n        return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n    }\n    get maxDist() {\n        // @ts-ignore FIXNE(TS)\n        return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    updateHasCustomActivationCriteria({ maxDistSq }) {\n        return !isValidNumber(maxDistSq);\n    }\n    getConfig() {\n        if (!this.hasCustomActivationCriteria) {\n            // Default config\n            // If no params have been defined then this config should emulate the native gesture as closely as possible.\n            return {\n                shouldCancelWhenOutside: true,\n                maxDistSq: 10,\n            };\n        }\n        return this.config;\n    }\n    getHammerConfig() {\n        return {\n            ...super.getHammerConfig(),\n            // threshold: this.maxDist,\n            time: this.minDurationMs,\n        };\n    }\n    getState(type) {\n        return {\n            [Hammer.INPUT_START]: State.ACTIVE,\n            [Hammer.INPUT_MOVE]: State.ACTIVE,\n            [Hammer.INPUT_END]: State.END,\n            [Hammer.INPUT_CANCEL]: State.FAILED,\n        }[type];\n    }\n}\nexport default LongPressGestureHandler;\n"]},"metadata":{},"sourceType":"module"}