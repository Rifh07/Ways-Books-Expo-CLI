{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Bootcamp\\\\react native\\\\finalProject\\\\node_modules\\\\react-native-elements\\\\dist\\\\buttons\\\\Button.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Color from 'color';\nimport { withTheme } from \"../config\";\nimport { renderNode, color } from \"../helpers\";\nimport Icon from \"../icons/Icon\";\n\nvar defaultLoadingProps = function defaultLoadingProps(type, theme) {\n  return {\n    color: type === 'solid' ? 'white' : theme.colors.primary,\n    size: 'small'\n  };\n};\n\nvar Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _super.apply(this, arguments);\n\n    _this.handleOnPress = function (evt) {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          _this$props$onPress = _this$props.onPress,\n          onPress = _this$props$onPress === void 0 ? function () {\n        return console.log('Please attach a method to this component');\n      } : _this$props$onPress;\n\n      if (!loading) {\n        onPress(evt);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          linearGradientProps = _this$props2.linearGradientProps,\n          ViewComponent = _this$props2.ViewComponent;\n\n      if (linearGradientProps && !ViewComponent) {\n        console.error(\"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          TouchableComponent = _a.TouchableComponent,\n          containerStyle = _a.containerStyle,\n          onPress = _a.onPress,\n          buttonStyle = _a.buttonStyle,\n          _a$type = _a.type,\n          type = _a$type === void 0 ? 'solid' : _a$type,\n          _a$loading = _a.loading,\n          loading = _a$loading === void 0 ? false : _a$loading,\n          loadingStyle = _a.loadingStyle,\n          passedLoadingProps = _a.loadingProps,\n          _a$title = _a.title,\n          title = _a$title === void 0 ? '' : _a$title,\n          titleProps = _a.titleProps,\n          passedTitleStyle = _a.titleStyle,\n          icon = _a.icon,\n          iconContainerStyle = _a.iconContainerStyle,\n          _a$iconRight = _a.iconRight,\n          iconRight = _a$iconRight === void 0 ? false : _a$iconRight,\n          _a$disabled = _a.disabled,\n          disabled = _a$disabled === void 0 ? false : _a$disabled,\n          disabledStyle = _a.disabledStyle,\n          disabledTitleStyle = _a.disabledTitleStyle,\n          _a$raised = _a.raised,\n          raised = _a$raised === void 0 ? false : _a$raised,\n          linearGradientProps = _a.linearGradientProps,\n          _a$ViewComponent = _a.ViewComponent,\n          ViewComponent = _a$ViewComponent === void 0 ? View : _a$ViewComponent,\n          theme = _a.theme,\n          attributes = __rest(_a, [\"TouchableComponent\", \"containerStyle\", \"onPress\", \"buttonStyle\", \"type\", \"loading\", \"loadingStyle\", \"loadingProps\", \"title\", \"titleProps\", \"titleStyle\", \"icon\", \"iconContainerStyle\", \"iconRight\", \"disabled\", \"disabledStyle\", \"disabledTitleStyle\", \"raised\", \"linearGradientProps\", \"ViewComponent\", \"theme\"]);\n\n      var TouchableComponentInternal = TouchableComponent || Platform.select({\n        android: linearGradientProps ? TouchableOpacity : TouchableNativeFeedback,\n        default: TouchableOpacity\n      });\n      var titleStyle = StyleSheet.flatten([{\n        color: type === 'solid' ? 'white' : theme.colors.primary\n      }, styles.title, passedTitleStyle, disabled && {\n        color: color(theme.colors.disabled).darken(0.3).string()\n      }, disabled && disabledTitleStyle]);\n      var background = Platform.OS === 'android' && Platform.Version >= 21 ? TouchableNativeFeedback.Ripple(Color(titleStyle.color).alpha(0.32).rgb().string(), true) : undefined;\n\n      var loadingProps = _extends(_extends({}, defaultLoadingProps(type, theme)), passedLoadingProps);\n\n      var accessibilityState = {\n        disabled: !!disabled,\n        busy: !!loading\n      };\n      return React.createElement(View, {\n        style: [styles.container, {\n          borderRadius: 3 || styles.container.borderRadius\n        }, containerStyle, raised && !disabled && type !== 'clear' && styles.raised],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableComponentInternal, _extends({\n        onPress: this.handleOnPress,\n        delayPressIn: 0,\n        activeOpacity: 0.3,\n        accessibilityRole: \"button\",\n        accessibilityState: accessibilityState,\n        disabled: disabled,\n        background: background\n      }, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }), React.createElement(ViewComponent, _extends({}, linearGradientProps, {\n        style: StyleSheet.flatten([styles.button, {\n          backgroundColor: type === 'solid' ? theme.colors.primary : 'transparent',\n          borderColor: theme.colors.primary,\n          borderWidth: type === 'outline' ? StyleSheet.hairlineWidth : 0\n        }, buttonStyle, disabled && type === 'solid' && {\n          backgroundColor: theme.colors.disabled\n        }, disabled && type === 'outline' && {\n          borderColor: color(theme.colors.disabled).darken(0.3).string()\n        }, disabled && disabledStyle]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }), loading && React.createElement(ActivityIndicator, _extends({\n        style: StyleSheet.flatten([styles.loading, loadingStyle]),\n        color: loadingProps.color,\n        size: loadingProps.size\n      }, loadingProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 26\n        }\n      })), !loading && icon && !iconRight && renderNode(Icon, icon, {\n        containerStyle: StyleSheet.flatten([styles.iconContainer, iconContainerStyle])\n      }), !loading && !!title && renderNode(Text, title, _extends({\n        style: titleStyle\n      }, titleProps)), !loading && icon && iconRight && renderNode(Icon, icon, {\n        containerStyle: StyleSheet.flatten([styles.iconContainer, iconContainerStyle])\n      }))));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\nvar styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3,\n    padding: 8\n  },\n  container: {\n    overflow: 'hidden',\n    borderRadius: 3\n  },\n  title: _extends({\n    fontSize: 16,\n    textAlign: 'center',\n    paddingVertical: 1\n  }, Platform.select({\n    android: {\n      fontFamily: 'sans-serif-medium'\n    },\n    default: {\n      fontSize: 18\n    }\n  })),\n  iconContainer: {\n    marginHorizontal: 5\n  },\n  raised: _extends({\n    backgroundColor: '#fff',\n    overflow: 'visible'\n  }, Platform.select({\n    android: {\n      elevation: 4\n    },\n    default: {\n      shadowColor: 'rgba(0,0,0, .4)',\n      shadowOffset: {\n        height: 1,\n        width: 1\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1\n    }\n  })),\n  loading: {\n    marginVertical: 2\n  }\n});\nexport { Button };\nexport default withTheme(Button, 'Button');","map":{"version":3,"sources":["D:/Bootcamp/react native/finalProject/node_modules/react-native-elements/dist/buttons/Button.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","Component","Color","withTheme","renderNode","color","Icon","defaultLoadingProps","type","theme","colors","primary","size","Button","arguments","handleOnPress","evt","props","loading","onPress","console","log","linearGradientProps","ViewComponent","error","_a","TouchableComponent","containerStyle","buttonStyle","loadingStyle","passedLoadingProps","loadingProps","title","titleProps","passedTitleStyle","titleStyle","icon","iconContainerStyle","iconRight","disabled","disabledStyle","disabledTitleStyle","raised","View","attributes","TouchableComponentInternal","Platform","select","android","TouchableOpacity","TouchableNativeFeedback","default","StyleSheet","flatten","styles","darken","string","background","OS","Version","Ripple","alpha","rgb","undefined","accessibilityState","busy","container","borderRadius","button","backgroundColor","borderColor","borderWidth","hairlineWidth","iconContainer","Text","style","create","flexDirection","justifyContent","alignItems","padding","overflow","fontSize","textAlign","paddingVertical","fontFamily","marginHorizontal","elevation","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","marginVertical"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Component } from 'react';\nimport { View, Text, TouchableNativeFeedback, TouchableOpacity, ActivityIndicator, Platform, StyleSheet, } from 'react-native';\nimport Color from 'color';\nimport { withTheme } from '../config';\nimport { renderNode, color } from '../helpers';\nimport Icon from '../icons/Icon';\nconst defaultLoadingProps = (type, theme) => ({\n    color: type === 'solid' ? 'white' : theme.colors.primary,\n    size: 'small',\n});\nclass Button extends Component {\n    constructor() {\n        super(...arguments);\n        this.handleOnPress = (evt) => {\n            const { loading, onPress = () => console.log('Please attach a method to this component'), } = this.props;\n            if (!loading) {\n                onPress(evt);\n            }\n        };\n    }\n    componentDidMount() {\n        const { linearGradientProps, ViewComponent } = this.props;\n        if (linearGradientProps && !ViewComponent) {\n            console.error(\"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\");\n        }\n    }\n    render() {\n        const _a = this.props, { TouchableComponent, containerStyle, onPress, buttonStyle, type = 'solid', loading = false, loadingStyle, loadingProps: passedLoadingProps, title = '', titleProps, titleStyle: passedTitleStyle, icon, iconContainerStyle, iconRight = false, disabled = false, disabledStyle, disabledTitleStyle, raised = false, linearGradientProps, ViewComponent = View, theme } = _a, attributes = __rest(_a, [\"TouchableComponent\", \"containerStyle\", \"onPress\", \"buttonStyle\", \"type\", \"loading\", \"loadingStyle\", \"loadingProps\", \"title\", \"titleProps\", \"titleStyle\", \"icon\", \"iconContainerStyle\", \"iconRight\", \"disabled\", \"disabledStyle\", \"disabledTitleStyle\", \"raised\", \"linearGradientProps\", \"ViewComponent\", \"theme\"]);\n        // Refactor to Pressable\n        const TouchableComponentInternal = TouchableComponent ||\n            Platform.select({\n                android: linearGradientProps\n                    ? TouchableOpacity\n                    : TouchableNativeFeedback,\n                default: TouchableOpacity,\n            });\n        const titleStyle = StyleSheet.flatten([\n            { color: type === 'solid' ? 'white' : theme.colors.primary },\n            styles.title,\n            passedTitleStyle,\n            disabled && { color: color(theme.colors.disabled).darken(0.3).string() },\n            disabled && disabledTitleStyle,\n        ]);\n        const background = Platform.OS === 'android' && Platform.Version >= 21\n            ? TouchableNativeFeedback.Ripple(\n            // @ts-ignore\n            Color(titleStyle.color).alpha(0.32).rgb().string(), true)\n            : undefined;\n        const loadingProps = Object.assign(Object.assign({}, defaultLoadingProps(type, theme)), passedLoadingProps);\n        const accessibilityState = {\n            disabled: !!disabled,\n            busy: !!loading,\n        };\n        return (<View style={[\n            styles.container,\n            {\n                borderRadius: 3 || styles.container.borderRadius,\n            },\n            containerStyle,\n            raised && !disabled && type !== 'clear' && styles.raised,\n        ]}>\n        <TouchableComponentInternal onPress={this.handleOnPress} delayPressIn={0} activeOpacity={0.3} accessibilityRole=\"button\" accessibilityState={accessibilityState} disabled={disabled} background={background} {...attributes}>\n          <ViewComponent {...linearGradientProps} style={StyleSheet.flatten([\n            styles.button,\n            {\n                backgroundColor: type === 'solid' ? theme.colors.primary : 'transparent',\n                borderColor: theme.colors.primary,\n                borderWidth: type === 'outline' ? StyleSheet.hairlineWidth : 0,\n            },\n            buttonStyle,\n            disabled &&\n                type === 'solid' && { backgroundColor: theme.colors.disabled },\n            disabled &&\n                type === 'outline' && {\n                borderColor: color(theme.colors.disabled)\n                    .darken(0.3)\n                    .string(),\n            },\n            disabled && disabledStyle,\n        ])}>\n            {loading && (<ActivityIndicator style={StyleSheet.flatten([styles.loading, loadingStyle])} color={loadingProps.color} size={loadingProps.size} {...loadingProps}/>)}\n\n            {!loading &&\n            icon &&\n            !iconRight &&\n            renderNode(Icon, icon, {\n                containerStyle: StyleSheet.flatten([\n                    styles.iconContainer,\n                    iconContainerStyle,\n                ]),\n            })}\n\n            {!loading &&\n            !!title &&\n            renderNode(Text, title, Object.assign({ style: titleStyle }, titleProps))}\n\n            {!loading &&\n            icon &&\n            iconRight &&\n            renderNode(Icon, icon, {\n                containerStyle: StyleSheet.flatten([\n                    styles.iconContainer,\n                    iconContainerStyle,\n                ]),\n            })}\n          </ViewComponent>\n        </TouchableComponentInternal>\n      </View>);\n    }\n}\nconst styles = StyleSheet.create({\n    button: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 3,\n        padding: 8,\n    },\n    container: {\n        overflow: 'hidden',\n        borderRadius: 3,\n    },\n    title: Object.assign({ fontSize: 16, textAlign: 'center', paddingVertical: 1 }, Platform.select({\n        android: {\n            fontFamily: 'sans-serif-medium',\n        },\n        default: {\n            fontSize: 18,\n        },\n    })),\n    iconContainer: {\n        marginHorizontal: 5,\n    },\n    raised: Object.assign({ backgroundColor: '#fff', overflow: 'visible' }, Platform.select({\n        android: {\n            elevation: 4,\n        },\n        default: {\n            shadowColor: 'rgba(0,0,0, .4)',\n            shadowOffset: { height: 1, width: 1 },\n            shadowOpacity: 1,\n            shadowRadius: 1,\n        },\n    })),\n    loading: {\n        marginVertical: 2,\n    },\n});\nexport { Button };\n//@ts-ignore\nexport default withTheme(Button, 'Button');\n"]},"metadata":{},"sourceType":"module"}